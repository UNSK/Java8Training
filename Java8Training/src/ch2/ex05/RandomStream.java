package ch2.ex05;

import java.math.BigInteger;
import java.util.stream.Stream;

public class RandomStream {

    public static void main(String[] args) {
        Stream<Long> randoms = createRandomStream(25214903917L, 11L, (long) Math.pow(2, 48), 123123L);
        randoms.limit(100).forEach(System.out::println);
        // TODO ちゃんと一様性があるか検定
    }
    
    /**
     * Creates infinite random number stream, its elements are generated by the LCG.
     * LCG: n -> (a * n + c) % m
     * @param a the given a
     * @param c the given c
     * @param m the given m
     * @param seed the seed of random number
     * @return infinite random number stream.
     */
    public static Stream<Long> createRandomStream(long a, long c, long m, long seed) {
        // ひとつめはseedなのでskipする。
        // return Stream.iterate(seed, n -> (a * n + c) % m).skip(1);
        // オーバフローするのでBigIntegerで計算した版
        return Stream.iterate(seed, n -> {
            BigInteger aa = BigInteger.valueOf(a);
            BigInteger nn = BigInteger.valueOf((long) n);
            BigInteger cc = BigInteger.valueOf(c);
            BigInteger mm = BigInteger.valueOf(m);
            return aa.multiply(nn).add(cc).mod(mm).longValue();
            }).skip(1);
    }
    
}
